circuit MM2hdmi :
  module MM2hdmi :
    input clock : Clock
    input reset : UInt<1>
    input io_data : UInt<16>
    input io_newData : UInt<1>
    output io_red : UInt<8>
    output io_blue : UInt<8>
    output io_green : UInt<8>
    output io_vSync : UInt<1>
    output io_hSync : UInt<1>
  
    reg regNewData : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regNewData) @[mm2hdmi.scala 19:27]
    reg regHSync : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regHSync) @[mm2hdmi.scala 21:25]
    node _T = add(regHSync, UInt<1>("h1")) @[mm2hdmi.scala 22:24]
    node _T_1 = tail(_T, 1) @[mm2hdmi.scala 22:24]
    reg regRow : UInt<5>, clock with :
      reset => (UInt<1>("h0"), regRow) @[mm2hdmi.scala 24:23]
    node _T_2 = eq(io_newData, UInt<1>("h1")) @[mm2hdmi.scala 25:19]
    node _T_3 = add(regRow, UInt<1>("h1")) @[mm2hdmi.scala 26:22]
    node _T_4 = tail(_T_3, 1) @[mm2hdmi.scala 26:22]
    node _GEN_0 = mux(_T_2, _T_4, regRow) @[mm2hdmi.scala 25:28]
    reg regVSync : UInt<1>, clock with :
      reset => (UInt<1>("h0"), regVSync) @[mm2hdmi.scala 29:25]
    node _T_5 = eq(regRow, UInt<5>("h1f")) @[mm2hdmi.scala 30:15]
    node _T_6 = add(regVSync, UInt<1>("h1")) @[mm2hdmi.scala 31:26]
    node _T_7 = tail(_T_6, 1) @[mm2hdmi.scala 31:26]
    node _GEN_1 = mux(_T_5, _T_7, regVSync) @[mm2hdmi.scala 30:25]
    reg regData : UInt<16>, clock with :
      reset => (UInt<1>("h0"), regData) @[mm2hdmi.scala 34:24]
    node _T_8 = bits(regData, 0, 0) @[mm2hdmi.scala 36:39]
    node _T_9 = eq(_T_8, UInt<1>("h0")) @[mm2hdmi.scala 36:43]
    node _T_10 = mux(_T_9, UInt<1>("h0"), UInt<8>("hff")) @[mm2hdmi.scala 36:31]
    reg regMuxRed0 : UInt<8>, clock with :
      reset => (UInt<1>("h0"), regMuxRed0) @[mm2hdmi.scala 36:27]
    node _T_11 = bits(regData, 1, 1) @[mm2hdmi.scala 37:39]
    node _T_12 = eq(_T_11, UInt<1>("h0")) @[mm2hdmi.scala 37:43]
    node _T_13 = mux(_T_12, UInt<1>("h0"), UInt<8>("hff")) @[mm2hdmi.scala 37:31]
    reg regMuxRed1 : UInt<8>, clock with :
      reset => (UInt<1>("h0"), regMuxRed1) @[mm2hdmi.scala 37:27]
    node _T_14 = bits(regData, 2, 2) @[mm2hdmi.scala 38:39]
    node _T_15 = eq(_T_14, UInt<1>("h0")) @[mm2hdmi.scala 38:43]
    node _T_16 = mux(_T_15, UInt<1>("h0"), UInt<8>("hff")) @[mm2hdmi.scala 38:31]
    reg regMuxRed2 : UInt<8>, clock with :
      reset => (UInt<1>("h0"), regMuxRed2) @[mm2hdmi.scala 38:27]
    node _T_17 = bits(regData, 3, 3) @[mm2hdmi.scala 39:39]
    node _T_18 = eq(_T_17, UInt<1>("h0")) @[mm2hdmi.scala 39:43]
    node _T_19 = mux(_T_18, UInt<1>("h0"), UInt<8>("hff")) @[mm2hdmi.scala 39:31]
    reg regMuxRed3 : UInt<8>, clock with :
      reset => (UInt<1>("h0"), regMuxRed3) @[mm2hdmi.scala 39:27]
    node _T_20 = bits(regData, 4, 4) @[mm2hdmi.scala 40:39]
    node _T_21 = eq(_T_20, UInt<1>("h0")) @[mm2hdmi.scala 40:43]
    node _T_22 = mux(_T_21, UInt<1>("h0"), UInt<8>("hff")) @[mm2hdmi.scala 40:31]
    reg regMuxRed4 : UInt<8>, clock with :
      reset => (UInt<1>("h0"), regMuxRed4) @[mm2hdmi.scala 40:27]
    node _T_23 = bits(regData, 5, 5) @[mm2hdmi.scala 41:39]
    node _T_24 = eq(_T_23, UInt<1>("h0")) @[mm2hdmi.scala 41:43]
    node _T_25 = mux(_T_24, UInt<1>("h0"), UInt<8>("hff")) @[mm2hdmi.scala 41:31]
    reg regMuxRed5 : UInt<8>, clock with :
      reset => (UInt<1>("h0"), regMuxRed5) @[mm2hdmi.scala 41:27]
    node _T_26 = bits(regData, 6, 6) @[mm2hdmi.scala 42:39]
    node _T_27 = eq(_T_26, UInt<1>("h0")) @[mm2hdmi.scala 42:43]
    node _T_28 = mux(_T_27, UInt<1>("h0"), UInt<8>("hff")) @[mm2hdmi.scala 42:31]
    reg regMuxRed6 : UInt<8>, clock with :
      reset => (UInt<1>("h0"), regMuxRed6) @[mm2hdmi.scala 42:27]
    node _T_29 = bits(regData, 7, 7) @[mm2hdmi.scala 43:39]
    node _T_30 = eq(_T_29, UInt<1>("h0")) @[mm2hdmi.scala 43:43]
    node _T_31 = mux(_T_30, UInt<1>("h0"), UInt<8>("hff")) @[mm2hdmi.scala 43:31]
    reg regMuxRed7 : UInt<8>, clock with :
      reset => (UInt<1>("h0"), regMuxRed7) @[mm2hdmi.scala 43:27]
    node _T_32 = bits(regData, 8, 8) @[mm2hdmi.scala 44:39]
    node _T_33 = eq(_T_32, UInt<1>("h0")) @[mm2hdmi.scala 44:43]
    node _T_34 = mux(_T_33, UInt<1>("h0"), UInt<8>("hff")) @[mm2hdmi.scala 44:31]
    reg regMuxRed8 : UInt<8>, clock with :
      reset => (UInt<1>("h0"), regMuxRed8) @[mm2hdmi.scala 44:27]
    node _T_35 = bits(regData, 9, 9) @[mm2hdmi.scala 45:39]
    node _T_36 = eq(_T_35, UInt<1>("h0")) @[mm2hdmi.scala 45:43]
    node _T_37 = mux(_T_36, UInt<1>("h0"), UInt<8>("hff")) @[mm2hdmi.scala 45:31]
    reg regMuxRed9 : UInt<8>, clock with :
      reset => (UInt<1>("h0"), regMuxRed9) @[mm2hdmi.scala 45:27]
    node _T_38 = bits(regData, 10, 10) @[mm2hdmi.scala 46:40]
    node _T_39 = eq(_T_38, UInt<1>("h0")) @[mm2hdmi.scala 46:45]
    node _T_40 = mux(_T_39, UInt<1>("h0"), UInt<8>("hff")) @[mm2hdmi.scala 46:32]
    reg regMuxRed10 : UInt<8>, clock with :
      reset => (UInt<1>("h0"), regMuxRed10) @[mm2hdmi.scala 46:28]
    node _T_41 = bits(regData, 11, 11) @[mm2hdmi.scala 47:40]
    node _T_42 = eq(_T_41, UInt<1>("h0")) @[mm2hdmi.scala 47:45]
    node _T_43 = mux(_T_42, UInt<1>("h0"), UInt<8>("hff")) @[mm2hdmi.scala 47:32]
    reg regMuxRed11 : UInt<8>, clock with :
      reset => (UInt<1>("h0"), regMuxRed11) @[mm2hdmi.scala 47:28]
    node _T_44 = bits(regData, 12, 12) @[mm2hdmi.scala 48:40]
    node _T_45 = eq(_T_44, UInt<1>("h0")) @[mm2hdmi.scala 48:45]
    node _T_46 = mux(_T_45, UInt<1>("h0"), UInt<8>("hff")) @[mm2hdmi.scala 48:32]
    reg regMuxRed12 : UInt<8>, clock with :
      reset => (UInt<1>("h0"), regMuxRed12) @[mm2hdmi.scala 48:28]
    node _T_47 = bits(regData, 13, 13) @[mm2hdmi.scala 49:40]
    node _T_48 = eq(_T_47, UInt<1>("h0")) @[mm2hdmi.scala 49:45]
    node _T_49 = mux(_T_48, UInt<1>("h0"), UInt<8>("hff")) @[mm2hdmi.scala 49:32]
    reg regMuxRed13 : UInt<8>, clock with :
      reset => (UInt<1>("h0"), regMuxRed13) @[mm2hdmi.scala 49:28]
    node _T_50 = bits(regData, 14, 14) @[mm2hdmi.scala 50:40]
    node _T_51 = eq(_T_50, UInt<1>("h0")) @[mm2hdmi.scala 50:45]
    node _T_52 = mux(_T_51, UInt<1>("h0"), UInt<8>("hff")) @[mm2hdmi.scala 50:32]
    reg regMuxRed14 : UInt<8>, clock with :
      reset => (UInt<1>("h0"), regMuxRed14) @[mm2hdmi.scala 50:28]
    node _T_53 = bits(regData, 15, 15) @[mm2hdmi.scala 51:40]
    node _T_54 = eq(_T_53, UInt<1>("h0")) @[mm2hdmi.scala 51:45]
    node _T_55 = mux(_T_54, UInt<1>("h0"), UInt<8>("hff")) @[mm2hdmi.scala 51:32]
    reg regMuxRed15 : UInt<8>, clock with :
      reset => (UInt<1>("h0"), regMuxRed15) @[mm2hdmi.scala 51:28]
    reg outControlCounter : UInt<4>, clock with :
      reset => (UInt<1>("h0"), outControlCounter) @[mm2hdmi.scala 53:34]
    node _T_56 = eq(outControlCounter, UInt<4>("hf")) @[mm2hdmi.scala 54:46]
    node _T_57 = eq(regNewData, UInt<1>("h1")) @[mm2hdmi.scala 54:69]
    node _T_58 = or(_T_56, _T_57) @[mm2hdmi.scala 54:55]
    node _T_59 = add(outControlCounter, UInt<1>("h1")) @[mm2hdmi.scala 54:101]
    node _T_60 = tail(_T_59, 1) @[mm2hdmi.scala 54:101]
    node _T_61 = mux(_T_58, UInt<1>("h0"), _T_60) @[mm2hdmi.scala 54:27]
    node _T_62 = eq(outControlCounter, UInt<1>("h0")) @[mm2hdmi.scala 56:27]
    node _T_63 = eq(outControlCounter, UInt<1>("h1")) @[mm2hdmi.scala 61:32]
    node _T_64 = eq(outControlCounter, UInt<2>("h2")) @[mm2hdmi.scala 66:32]
    node _T_65 = eq(outControlCounter, UInt<2>("h3")) @[mm2hdmi.scala 71:32]
    node _T_66 = eq(outControlCounter, UInt<3>("h4")) @[mm2hdmi.scala 76:32]
    node _T_67 = eq(outControlCounter, UInt<3>("h5")) @[mm2hdmi.scala 81:32]
    node _T_68 = eq(outControlCounter, UInt<3>("h6")) @[mm2hdmi.scala 86:32]
    node _T_69 = eq(outControlCounter, UInt<3>("h7")) @[mm2hdmi.scala 91:32]
    node _T_70 = eq(outControlCounter, UInt<4>("h8")) @[mm2hdmi.scala 96:32]
    node _T_71 = eq(outControlCounter, UInt<4>("h9")) @[mm2hdmi.scala 101:32]
    node _T_72 = eq(outControlCounter, UInt<4>("ha")) @[mm2hdmi.scala 106:32]
    node _T_73 = eq(outControlCounter, UInt<4>("hb")) @[mm2hdmi.scala 111:32]
    node _T_74 = eq(outControlCounter, UInt<4>("hc")) @[mm2hdmi.scala 116:32]
    node _T_75 = eq(outControlCounter, UInt<4>("hd")) @[mm2hdmi.scala 121:32]
    node _T_76 = eq(outControlCounter, UInt<4>("he")) @[mm2hdmi.scala 126:32]
    node _GEN_2 = mux(_T_76, regMuxRed14, regMuxRed15) @[mm2hdmi.scala 126:42]
    node _GEN_3 = mux(_T_75, regMuxRed13, _GEN_2) @[mm2hdmi.scala 121:42]
    node _GEN_4 = mux(_T_74, regMuxRed12, _GEN_3) @[mm2hdmi.scala 116:42]
    node _GEN_5 = mux(_T_73, regMuxRed11, _GEN_4) @[mm2hdmi.scala 111:42]
    node _GEN_6 = mux(_T_72, regMuxRed10, _GEN_5) @[mm2hdmi.scala 106:42]
    node _GEN_7 = mux(_T_71, regMuxRed9, _GEN_6) @[mm2hdmi.scala 101:41]
    node _GEN_8 = mux(_T_70, regMuxRed8, _GEN_7) @[mm2hdmi.scala 96:41]
    node _GEN_9 = mux(_T_69, regMuxRed7, _GEN_8) @[mm2hdmi.scala 91:41]
    node _GEN_10 = mux(_T_68, regMuxRed6, _GEN_9) @[mm2hdmi.scala 86:41]
    node _GEN_11 = mux(_T_67, regMuxRed5, _GEN_10) @[mm2hdmi.scala 81:41]
    node _GEN_12 = mux(_T_66, regMuxRed4, _GEN_11) @[mm2hdmi.scala 76:41]
    node _GEN_13 = mux(_T_65, regMuxRed3, _GEN_12) @[mm2hdmi.scala 71:41]
    node _GEN_14 = mux(_T_64, regMuxRed2, _GEN_13) @[mm2hdmi.scala 66:41]
    node _GEN_15 = mux(_T_63, regMuxRed1, _GEN_14) @[mm2hdmi.scala 61:41]
    node _GEN_16 = mux(_T_62, regMuxRed0, _GEN_15) @[mm2hdmi.scala 56:36]
    io_red <= _GEN_16 @[mm2hdmi.scala 57:12 mm2hdmi.scala 62:12 mm2hdmi.scala 67:12 mm2hdmi.scala 72:12 mm2hdmi.scala 77:12 mm2hdmi.scala 82:12 mm2hdmi.scala 87:12 mm2hdmi.scala 92:12 mm2hdmi.scala 97:12 mm2hdmi.scala 102:12 mm2hdmi.scala 107:12 mm2hdmi.scala 112:12 mm2hdmi.scala 117:12 mm2hdmi.scala 122:12 mm2hdmi.scala 127:12 mm2hdmi.scala 132:12]
    io_blue <= _GEN_16 @[mm2hdmi.scala 59:13 mm2hdmi.scala 64:13 mm2hdmi.scala 69:13 mm2hdmi.scala 74:13 mm2hdmi.scala 79:13 mm2hdmi.scala 84:13 mm2hdmi.scala 89:13 mm2hdmi.scala 94:13 mm2hdmi.scala 99:13 mm2hdmi.scala 104:13 mm2hdmi.scala 109:13 mm2hdmi.scala 114:13 mm2hdmi.scala 119:13 mm2hdmi.scala 124:13 mm2hdmi.scala 129:13 mm2hdmi.scala 134:13]
    io_green <= _GEN_16 @[mm2hdmi.scala 58:14 mm2hdmi.scala 63:14 mm2hdmi.scala 68:14 mm2hdmi.scala 73:14 mm2hdmi.scala 78:14 mm2hdmi.scala 83:14 mm2hdmi.scala 88:14 mm2hdmi.scala 93:14 mm2hdmi.scala 98:14 mm2hdmi.scala 103:14 mm2hdmi.scala 108:14 mm2hdmi.scala 113:14 mm2hdmi.scala 118:14 mm2hdmi.scala 123:14 mm2hdmi.scala 128:14 mm2hdmi.scala 133:14]
    io_vSync <= regVSync @[mm2hdmi.scala 138:12]
    io_hSync <= regHSync @[mm2hdmi.scala 137:12]
    regNewData <= io_newData @[mm2hdmi.scala 19:27]
    regHSync <= mux(reset, UInt<1>("h0"), _T_1) @[mm2hdmi.scala 22:12]
    regRow <= mux(reset, UInt<5>("h0"), _GEN_0) @[mm2hdmi.scala 26:12]
    regVSync <= mux(reset, UInt<1>("h0"), _GEN_1) @[mm2hdmi.scala 31:14]
    regData <= io_data @[mm2hdmi.scala 34:24]
    regMuxRed0 <= _T_10 @[mm2hdmi.scala 36:27]
    regMuxRed1 <= _T_13 @[mm2hdmi.scala 37:27]
    regMuxRed2 <= _T_16 @[mm2hdmi.scala 38:27]
    regMuxRed3 <= _T_19 @[mm2hdmi.scala 39:27]
    regMuxRed4 <= _T_22 @[mm2hdmi.scala 40:27]
    regMuxRed5 <= _T_25 @[mm2hdmi.scala 41:27]
    regMuxRed6 <= _T_28 @[mm2hdmi.scala 42:27]
    regMuxRed7 <= _T_31 @[mm2hdmi.scala 43:27]
    regMuxRed8 <= _T_34 @[mm2hdmi.scala 44:27]
    regMuxRed9 <= _T_37 @[mm2hdmi.scala 45:27]
    regMuxRed10 <= _T_40 @[mm2hdmi.scala 46:28]
    regMuxRed11 <= _T_43 @[mm2hdmi.scala 47:28]
    regMuxRed12 <= _T_46 @[mm2hdmi.scala 48:28]
    regMuxRed13 <= _T_49 @[mm2hdmi.scala 49:28]
    regMuxRed14 <= _T_52 @[mm2hdmi.scala 50:28]
    regMuxRed15 <= _T_55 @[mm2hdmi.scala 51:28]
    outControlCounter <= mux(reset, UInt<4>("h0"), _T_61) @[mm2hdmi.scala 54:21]
