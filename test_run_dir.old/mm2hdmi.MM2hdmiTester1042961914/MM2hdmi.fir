;buildInfoPackage: chisel3, version: 3.3.1, scalaVersion: 2.12.11, sbtVersion: 1.3.10
circuit MM2hdmi : 
  module MM2hdmi : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip data : UInt<16>, flip address : UInt<16>, flip newData : UInt<1>, red : UInt<8>, blue : UInt<8>, green : UInt<8>, vSync : UInt<1>, hSync : UInt<1>}
    
    reg regNewData : UInt, clock @[mm2hdmi.scala 20:27]
    regNewData <= io.newData @[mm2hdmi.scala 20:27]
    reg regHSync : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[mm2hdmi.scala 22:25]
    node _T = add(regHSync, UInt<1>("h01")) @[mm2hdmi.scala 23:24]
    node _T_1 = tail(_T, 1) @[mm2hdmi.scala 23:24]
    regHSync <= _T_1 @[mm2hdmi.scala 23:12]
    reg regRow : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[mm2hdmi.scala 25:23]
    node _T_2 = eq(io.newData, UInt<1>("h01")) @[mm2hdmi.scala 26:19]
    when _T_2 : @[mm2hdmi.scala 26:28]
      node _T_3 = add(regRow, UInt<1>("h01")) @[mm2hdmi.scala 27:22]
      node _T_4 = tail(_T_3, 1) @[mm2hdmi.scala 27:22]
      regRow <= _T_4 @[mm2hdmi.scala 27:12]
      skip @[mm2hdmi.scala 26:28]
    reg regVSync : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[mm2hdmi.scala 30:25]
    node _T_5 = eq(regRow, UInt<6>("h020")) @[mm2hdmi.scala 31:15]
    when _T_5 : @[mm2hdmi.scala 31:25]
      node _T_6 = add(regVSync, UInt<1>("h01")) @[mm2hdmi.scala 32:26]
      node _T_7 = tail(_T_6, 1) @[mm2hdmi.scala 32:26]
      regVSync <= _T_7 @[mm2hdmi.scala 32:14]
      skip @[mm2hdmi.scala 31:25]
    reg regAddress : UInt, clock @[mm2hdmi.scala 36:27]
    regAddress <= io.address @[mm2hdmi.scala 36:27]
    reg regData : UInt, clock @[mm2hdmi.scala 37:24]
    regData <= io.data @[mm2hdmi.scala 37:24]
    node _T_8 = bits(regData, 0, 0) @[mm2hdmi.scala 39:39]
    node _T_9 = eq(_T_8, UInt<1>("h00")) @[mm2hdmi.scala 39:43]
    node _T_10 = mux(_T_9, UInt<1>("h00"), UInt<8>("h0ff")) @[mm2hdmi.scala 39:31]
    reg regMuxRed0 : UInt, clock @[mm2hdmi.scala 39:27]
    regMuxRed0 <= _T_10 @[mm2hdmi.scala 39:27]
    node _T_11 = bits(regData, 1, 1) @[mm2hdmi.scala 40:39]
    node _T_12 = eq(_T_11, UInt<1>("h00")) @[mm2hdmi.scala 40:43]
    node _T_13 = mux(_T_12, UInt<1>("h00"), UInt<8>("h0ff")) @[mm2hdmi.scala 40:31]
    reg regMuxRed1 : UInt, clock @[mm2hdmi.scala 40:27]
    regMuxRed1 <= _T_13 @[mm2hdmi.scala 40:27]
    node _T_14 = bits(regData, 2, 2) @[mm2hdmi.scala 41:39]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[mm2hdmi.scala 41:43]
    node _T_16 = mux(_T_15, UInt<1>("h00"), UInt<8>("h0ff")) @[mm2hdmi.scala 41:31]
    reg regMuxRed2 : UInt, clock @[mm2hdmi.scala 41:27]
    regMuxRed2 <= _T_16 @[mm2hdmi.scala 41:27]
    node _T_17 = bits(regData, 3, 3) @[mm2hdmi.scala 42:39]
    node _T_18 = eq(_T_17, UInt<1>("h00")) @[mm2hdmi.scala 42:43]
    node _T_19 = mux(_T_18, UInt<1>("h00"), UInt<8>("h0ff")) @[mm2hdmi.scala 42:31]
    reg regMuxRed3 : UInt, clock @[mm2hdmi.scala 42:27]
    regMuxRed3 <= _T_19 @[mm2hdmi.scala 42:27]
    node _T_20 = bits(regData, 4, 4) @[mm2hdmi.scala 43:39]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[mm2hdmi.scala 43:43]
    node _T_22 = mux(_T_21, UInt<1>("h00"), UInt<8>("h0ff")) @[mm2hdmi.scala 43:31]
    reg regMuxRed4 : UInt, clock @[mm2hdmi.scala 43:27]
    regMuxRed4 <= _T_22 @[mm2hdmi.scala 43:27]
    node _T_23 = bits(regData, 5, 5) @[mm2hdmi.scala 44:39]
    node _T_24 = eq(_T_23, UInt<1>("h00")) @[mm2hdmi.scala 44:43]
    node _T_25 = mux(_T_24, UInt<1>("h00"), UInt<8>("h0ff")) @[mm2hdmi.scala 44:31]
    reg regMuxRed5 : UInt, clock @[mm2hdmi.scala 44:27]
    regMuxRed5 <= _T_25 @[mm2hdmi.scala 44:27]
    node _T_26 = bits(regData, 6, 6) @[mm2hdmi.scala 45:39]
    node _T_27 = eq(_T_26, UInt<1>("h00")) @[mm2hdmi.scala 45:43]
    node _T_28 = mux(_T_27, UInt<1>("h00"), UInt<8>("h0ff")) @[mm2hdmi.scala 45:31]
    reg regMuxRed6 : UInt, clock @[mm2hdmi.scala 45:27]
    regMuxRed6 <= _T_28 @[mm2hdmi.scala 45:27]
    node _T_29 = bits(regData, 7, 7) @[mm2hdmi.scala 46:39]
    node _T_30 = eq(_T_29, UInt<1>("h00")) @[mm2hdmi.scala 46:43]
    node _T_31 = mux(_T_30, UInt<1>("h00"), UInt<8>("h0ff")) @[mm2hdmi.scala 46:31]
    reg regMuxRed7 : UInt, clock @[mm2hdmi.scala 46:27]
    regMuxRed7 <= _T_31 @[mm2hdmi.scala 46:27]
    node _T_32 = bits(regData, 8, 8) @[mm2hdmi.scala 47:39]
    node _T_33 = eq(_T_32, UInt<1>("h00")) @[mm2hdmi.scala 47:43]
    node _T_34 = mux(_T_33, UInt<1>("h00"), UInt<8>("h0ff")) @[mm2hdmi.scala 47:31]
    reg regMuxRed8 : UInt, clock @[mm2hdmi.scala 47:27]
    regMuxRed8 <= _T_34 @[mm2hdmi.scala 47:27]
    node _T_35 = bits(regData, 9, 9) @[mm2hdmi.scala 48:39]
    node _T_36 = eq(_T_35, UInt<1>("h00")) @[mm2hdmi.scala 48:43]
    node _T_37 = mux(_T_36, UInt<1>("h00"), UInt<8>("h0ff")) @[mm2hdmi.scala 48:31]
    reg regMuxRed9 : UInt, clock @[mm2hdmi.scala 48:27]
    regMuxRed9 <= _T_37 @[mm2hdmi.scala 48:27]
    node _T_38 = bits(regData, 10, 10) @[mm2hdmi.scala 49:40]
    node _T_39 = eq(_T_38, UInt<1>("h00")) @[mm2hdmi.scala 49:45]
    node _T_40 = mux(_T_39, UInt<1>("h00"), UInt<8>("h0ff")) @[mm2hdmi.scala 49:32]
    reg regMuxRed10 : UInt, clock @[mm2hdmi.scala 49:28]
    regMuxRed10 <= _T_40 @[mm2hdmi.scala 49:28]
    node _T_41 = bits(regData, 11, 11) @[mm2hdmi.scala 50:40]
    node _T_42 = eq(_T_41, UInt<1>("h00")) @[mm2hdmi.scala 50:45]
    node _T_43 = mux(_T_42, UInt<1>("h00"), UInt<8>("h0ff")) @[mm2hdmi.scala 50:32]
    reg regMuxRed11 : UInt, clock @[mm2hdmi.scala 50:28]
    regMuxRed11 <= _T_43 @[mm2hdmi.scala 50:28]
    node _T_44 = bits(regData, 12, 12) @[mm2hdmi.scala 51:40]
    node _T_45 = eq(_T_44, UInt<1>("h00")) @[mm2hdmi.scala 51:45]
    node _T_46 = mux(_T_45, UInt<1>("h00"), UInt<8>("h0ff")) @[mm2hdmi.scala 51:32]
    reg regMuxRed12 : UInt, clock @[mm2hdmi.scala 51:28]
    regMuxRed12 <= _T_46 @[mm2hdmi.scala 51:28]
    node _T_47 = bits(regData, 13, 13) @[mm2hdmi.scala 52:40]
    node _T_48 = eq(_T_47, UInt<1>("h00")) @[mm2hdmi.scala 52:45]
    node _T_49 = mux(_T_48, UInt<1>("h00"), UInt<8>("h0ff")) @[mm2hdmi.scala 52:32]
    reg regMuxRed13 : UInt, clock @[mm2hdmi.scala 52:28]
    regMuxRed13 <= _T_49 @[mm2hdmi.scala 52:28]
    node _T_50 = bits(regData, 14, 14) @[mm2hdmi.scala 53:40]
    node _T_51 = eq(_T_50, UInt<1>("h00")) @[mm2hdmi.scala 53:45]
    node _T_52 = mux(_T_51, UInt<1>("h00"), UInt<8>("h0ff")) @[mm2hdmi.scala 53:32]
    reg regMuxRed14 : UInt, clock @[mm2hdmi.scala 53:28]
    regMuxRed14 <= _T_52 @[mm2hdmi.scala 53:28]
    node _T_53 = bits(regData, 15, 15) @[mm2hdmi.scala 54:40]
    node _T_54 = eq(_T_53, UInt<1>("h00")) @[mm2hdmi.scala 54:45]
    node _T_55 = mux(_T_54, UInt<1>("h00"), UInt<8>("h0ff")) @[mm2hdmi.scala 54:32]
    reg regMuxRed15 : UInt, clock @[mm2hdmi.scala 54:28]
    regMuxRed15 <= _T_55 @[mm2hdmi.scala 54:28]
    reg outControlCounter : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[mm2hdmi.scala 56:34]
    node _T_56 = eq(outControlCounter, UInt<4>("h0f")) @[mm2hdmi.scala 57:46]
    node _T_57 = eq(regNewData, UInt<1>("h01")) @[mm2hdmi.scala 57:69]
    node _T_58 = or(_T_56, _T_57) @[mm2hdmi.scala 57:55]
    node _T_59 = add(outControlCounter, UInt<1>("h01")) @[mm2hdmi.scala 57:101]
    node _T_60 = tail(_T_59, 1) @[mm2hdmi.scala 57:101]
    node _T_61 = mux(_T_58, UInt<1>("h00"), _T_60) @[mm2hdmi.scala 57:27]
    outControlCounter <= _T_61 @[mm2hdmi.scala 57:21]
    node _T_62 = eq(outControlCounter, UInt<1>("h00")) @[mm2hdmi.scala 59:27]
    when _T_62 : @[mm2hdmi.scala 59:36]
      io.red <= regMuxRed0 @[mm2hdmi.scala 60:12]
      io.green <= regMuxRed0 @[mm2hdmi.scala 61:14]
      io.blue <= regMuxRed0 @[mm2hdmi.scala 62:13]
      skip @[mm2hdmi.scala 59:36]
    else : @[mm2hdmi.scala 64:41]
      node _T_63 = eq(outControlCounter, UInt<1>("h01")) @[mm2hdmi.scala 64:32]
      when _T_63 : @[mm2hdmi.scala 64:41]
        io.red <= regMuxRed1 @[mm2hdmi.scala 65:12]
        io.green <= regMuxRed1 @[mm2hdmi.scala 66:14]
        io.blue <= regMuxRed1 @[mm2hdmi.scala 67:13]
        skip @[mm2hdmi.scala 64:41]
      else : @[mm2hdmi.scala 69:41]
        node _T_64 = eq(outControlCounter, UInt<2>("h02")) @[mm2hdmi.scala 69:32]
        when _T_64 : @[mm2hdmi.scala 69:41]
          io.red <= regMuxRed2 @[mm2hdmi.scala 70:12]
          io.green <= regMuxRed2 @[mm2hdmi.scala 71:14]
          io.blue <= regMuxRed2 @[mm2hdmi.scala 72:13]
          skip @[mm2hdmi.scala 69:41]
        else : @[mm2hdmi.scala 74:41]
          node _T_65 = eq(outControlCounter, UInt<2>("h03")) @[mm2hdmi.scala 74:32]
          when _T_65 : @[mm2hdmi.scala 74:41]
            io.red <= regMuxRed3 @[mm2hdmi.scala 75:12]
            io.green <= regMuxRed3 @[mm2hdmi.scala 76:14]
            io.blue <= regMuxRed3 @[mm2hdmi.scala 77:13]
            skip @[mm2hdmi.scala 74:41]
          else : @[mm2hdmi.scala 79:41]
            node _T_66 = eq(outControlCounter, UInt<3>("h04")) @[mm2hdmi.scala 79:32]
            when _T_66 : @[mm2hdmi.scala 79:41]
              io.red <= regMuxRed4 @[mm2hdmi.scala 80:12]
              io.green <= regMuxRed4 @[mm2hdmi.scala 81:14]
              io.blue <= regMuxRed4 @[mm2hdmi.scala 82:13]
              skip @[mm2hdmi.scala 79:41]
            else : @[mm2hdmi.scala 84:41]
              node _T_67 = eq(outControlCounter, UInt<3>("h05")) @[mm2hdmi.scala 84:32]
              when _T_67 : @[mm2hdmi.scala 84:41]
                io.red <= regMuxRed5 @[mm2hdmi.scala 85:12]
                io.green <= regMuxRed5 @[mm2hdmi.scala 86:14]
                io.blue <= regMuxRed5 @[mm2hdmi.scala 87:13]
                skip @[mm2hdmi.scala 84:41]
              else : @[mm2hdmi.scala 89:41]
                node _T_68 = eq(outControlCounter, UInt<3>("h06")) @[mm2hdmi.scala 89:32]
                when _T_68 : @[mm2hdmi.scala 89:41]
                  io.red <= regMuxRed6 @[mm2hdmi.scala 90:12]
                  io.green <= regMuxRed6 @[mm2hdmi.scala 91:14]
                  io.blue <= regMuxRed6 @[mm2hdmi.scala 92:13]
                  skip @[mm2hdmi.scala 89:41]
                else : @[mm2hdmi.scala 94:41]
                  node _T_69 = eq(outControlCounter, UInt<3>("h07")) @[mm2hdmi.scala 94:32]
                  when _T_69 : @[mm2hdmi.scala 94:41]
                    io.red <= regMuxRed7 @[mm2hdmi.scala 95:12]
                    io.green <= regMuxRed7 @[mm2hdmi.scala 96:14]
                    io.blue <= regMuxRed7 @[mm2hdmi.scala 97:13]
                    skip @[mm2hdmi.scala 94:41]
                  else : @[mm2hdmi.scala 99:41]
                    node _T_70 = eq(outControlCounter, UInt<4>("h08")) @[mm2hdmi.scala 99:32]
                    when _T_70 : @[mm2hdmi.scala 99:41]
                      io.red <= regMuxRed8 @[mm2hdmi.scala 100:12]
                      io.green <= regMuxRed8 @[mm2hdmi.scala 101:14]
                      io.blue <= regMuxRed8 @[mm2hdmi.scala 102:13]
                      skip @[mm2hdmi.scala 99:41]
                    else : @[mm2hdmi.scala 104:41]
                      node _T_71 = eq(outControlCounter, UInt<4>("h09")) @[mm2hdmi.scala 104:32]
                      when _T_71 : @[mm2hdmi.scala 104:41]
                        io.red <= regMuxRed9 @[mm2hdmi.scala 105:12]
                        io.green <= regMuxRed9 @[mm2hdmi.scala 106:14]
                        io.blue <= regMuxRed9 @[mm2hdmi.scala 107:13]
                        skip @[mm2hdmi.scala 104:41]
                      else : @[mm2hdmi.scala 109:42]
                        node _T_72 = eq(outControlCounter, UInt<4>("h0a")) @[mm2hdmi.scala 109:32]
                        when _T_72 : @[mm2hdmi.scala 109:42]
                          io.red <= regMuxRed10 @[mm2hdmi.scala 110:12]
                          io.green <= regMuxRed10 @[mm2hdmi.scala 111:14]
                          io.blue <= regMuxRed10 @[mm2hdmi.scala 112:13]
                          skip @[mm2hdmi.scala 109:42]
                        else : @[mm2hdmi.scala 114:42]
                          node _T_73 = eq(outControlCounter, UInt<4>("h0b")) @[mm2hdmi.scala 114:32]
                          when _T_73 : @[mm2hdmi.scala 114:42]
                            io.red <= regMuxRed11 @[mm2hdmi.scala 115:12]
                            io.green <= regMuxRed11 @[mm2hdmi.scala 116:14]
                            io.blue <= regMuxRed11 @[mm2hdmi.scala 117:13]
                            skip @[mm2hdmi.scala 114:42]
                          else : @[mm2hdmi.scala 119:42]
                            node _T_74 = eq(outControlCounter, UInt<4>("h0c")) @[mm2hdmi.scala 119:32]
                            when _T_74 : @[mm2hdmi.scala 119:42]
                              io.red <= regMuxRed12 @[mm2hdmi.scala 120:12]
                              io.green <= regMuxRed12 @[mm2hdmi.scala 121:14]
                              io.blue <= regMuxRed12 @[mm2hdmi.scala 122:13]
                              skip @[mm2hdmi.scala 119:42]
                            else : @[mm2hdmi.scala 124:42]
                              node _T_75 = eq(outControlCounter, UInt<4>("h0d")) @[mm2hdmi.scala 124:32]
                              when _T_75 : @[mm2hdmi.scala 124:42]
                                io.red <= regMuxRed13 @[mm2hdmi.scala 125:12]
                                io.green <= regMuxRed13 @[mm2hdmi.scala 126:14]
                                io.blue <= regMuxRed13 @[mm2hdmi.scala 127:13]
                                skip @[mm2hdmi.scala 124:42]
                              else : @[mm2hdmi.scala 129:42]
                                node _T_76 = eq(outControlCounter, UInt<4>("h0e")) @[mm2hdmi.scala 129:32]
                                when _T_76 : @[mm2hdmi.scala 129:42]
                                  io.red <= regMuxRed14 @[mm2hdmi.scala 130:12]
                                  io.green <= regMuxRed14 @[mm2hdmi.scala 131:14]
                                  io.blue <= regMuxRed14 @[mm2hdmi.scala 132:13]
                                  skip @[mm2hdmi.scala 129:42]
                                else : @[mm2hdmi.scala 134:14]
                                  io.red <= regMuxRed15 @[mm2hdmi.scala 135:12]
                                  io.green <= regMuxRed15 @[mm2hdmi.scala 136:14]
                                  io.blue <= regMuxRed15 @[mm2hdmi.scala 137:13]
                                  skip @[mm2hdmi.scala 134:14]
    io.hSync <= regHSync @[mm2hdmi.scala 140:12]
    io.vSync <= regVSync @[mm2hdmi.scala 141:12]
    
